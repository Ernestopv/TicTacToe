
board=[' ']*10
player=' '
game=True
keepgoing=True
full=False


def display(board):

    print ' '+board[1]+' | '+ board[2]+' | '+board[3]+'  '
    print "------------"
    print ' ' + board[4] + ' | ' + board[5] + ' | ' + board[6] + '  '
    print "------------"
    print ' ' + board[7] + ' | ' + board[8] + ' | ' + board[9] + '  '



def player_input():
    print 'Introduce  which Player would you Like  O or X '
    player=raw_input()
    player=player.upper()

    while (game):

        if player=='X':
            keepgoing = True
            while(keepgoing):
                display(board)
                print 'please select your position  between 1-9 Player:'+player
                a=int(raw_input())
                if (board[a]!='X' and board[a]!='O') :
                    board[a]='X'
                    display(board)
                    win_check(player,board)
                    checkingFull(board)
                    player='O'
                    print 'please select your position between 1-9 '+player
                    a=int(raw_input())
                    if(board[a]!='X' and board[a]!='O'):
                        board[a] = 'O'
                        win_check(player,board)
                        checkingFull(board)
                        player='X'
                    else :
                        print 'This value is already Taken!'
                else:
                    print 'this value is already Taken!!'

        if player=='O':
            keepgoing = True
            while(keepgoing):
                display(board)
                print 'please select your position  between 1-9 Player:'+player
                a=int(raw_input())
                if (board[a]!='X' and board[a]!='O') :
                    board[a]='O'
                    display(board)
                    win_check(player,board)
                    checkingFull(board)
                    player='X'
                    print 'please select your position between 1-9 '+player
                    a=int(raw_input())
                    if(board[a]!='X' and board[a]!='O'):
                        board[a] = 'X'
                        win_check(player,board)
                        checkingFull(board)
                        player='O'
                    else :
                        print 'This value is already Taken!'
                else:
                    print 'this value is already Taken!!'




def win_check(player,board):

    if board[1]== player  and board[2]== player and board[3]==player or \
       board[4] ==player and  board[5] == player and board[6] == player or \
       board[7] ==player and  board[8] == player and  board[9] == player or \
       board[1] ==player and  board[4] == player and board[7] == player or \
       board[2] ==player and  board[5] ==player and  board[8] == player or \
       board[3] ==player and  board[6] ==player and  board[9] == player or \
       board[3] ==player and  board[5] ==player and  board[7] == player or \
       board[1] ==player and  board[5] ==player and  board[9] == player :

        print 'Winner !'+player
        display(board)
        print 'would you like to play again Y or N'

        answer=raw_input()
        answer=answer.upper()
        if(answer=='Y'):
            print 'Restarting .......'
            n=10
            for n in range(len(board)):
                board[n]=' '
            return  board
            display(board)
            player_input()
        else:
            exit()



def checkingFull(board):
    board[0] = 'no value'
    if all(n!=' ' for n in board):
        print 'Nobody wins!'
        display(board)
        print 'would you like to play again Y or N'

        answer = raw_input()
        answer = answer.upper()
        if (answer == 'Y'):
            print 'Restarting .......'
            n = 10
            for n in range(len(board)):
                board[n] = ' '
            return board
            display(board)
            player_input()
        else:
            exit()
    return board


player_input()















